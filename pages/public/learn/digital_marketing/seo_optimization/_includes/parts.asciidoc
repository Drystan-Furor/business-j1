// ~/document_base_folder/000_includes
//  Asciidoc part includes:                 parts.asciidoc
// -----------------------------------------------------------------------------


// Summarized
// -----------------------------------------------------------------------------
//  tag::summarized[]
//
A lot you've learned, time to summarize what is behind. The last chapter
should help with that. The section Summarize offers some handy sections to
remember what has been presented in this chapter. And giving an outlook of what
could be done next, an overview of all chapters of this tutorial, and useful
links to learn more.

See all *sections* below: +
mdi:backup-restore[24px, md-blue mr-2 ml-3]
<<Recap>> -- What has been done, what's explored in current section +
mdi:skip-next[24px, md-blue mr-2 ml-3]
<<What Next>> -- Find to go further, what's planned next +
mdi:format-section[24px, md-blue mr-2 ml-3]
<<All Chapters>> -- The full chain, all chapters +
mdi:link-variant[24px, md-blue mr-2 ml-3]
<<Further Reading>> -- List of helpful links to get more
//
//  end::summarized[]

// End Summarized --------------------------------------------------------------


// Recap
// -----------------------------------------------------------------------------
//  tag::recap_100_what_is_seo[]
//
This first section was a bit theoretical. However, one should be familiar with
the functions of the tools, such as the terms of the JAM stack. As the tutorial
progresses, the relationships between the components will become more complex.
Then it will be helpful to assign individual components or work steps to the
technical terms.

Without knowledge of technical terms, searching for information on the
Internet will be quite difficult. You now know the most important terms.
Using technical terms should also make searching the Internet easier.
//
//  end::recap_100_what_is_seo[]

//  tag::recap_200_a_awesome_site[]
//
You got it managed. The new website is online. The site was built from
the boilerplate of J1. For sure, not real your site but a good starting
point for your content to make your ideas of a website real.
And you're prepared well. The control center on Netlify is in place, and
your site is sitting a repo at Github. Not that bad!

And better: your control center on Netlify supports you for the next
deployments of the modifications you made. And again, all steps needed
to deploy your site is done in minutes.
//
//  end::recap_200_a_awesome_site[]

//  tag::recap_300_dev_system[]
//
Installing the development system was not an easy job to do; unfortunately
inevitable. One thing is promised, the following sections do not require
any lengthy software installations. The installed programming languages
​​are the basis for executing J1 Projects. However, no programming is required
to edit a website as promised. The Ruby programming language is used as the
runtime environment to run the Jekyll builder engine. Under no circumstances
will you need to become a Ruby specialist. Some background information on
dealing with Ruby programs is still helpful and is explained as small snippets
in the subsequent sections.

NodeJS, the Javascript VM on your PC, only controls the project when
editing websites. A J1 based web is a JS project that is very easy to
operate. The built-in control requires very few commands that are quickly
learned.

The tools Git and the Source Code Editor (Atom Editor) are often used.
The repository will protect you from data loss and will be the safety net
for the new web in the best sense. The editor is the main tool for editing
a website and its pages. With a little practice, you can quickly learn to
use the editor. After working with the editor for a very short time, you
will understand why this tool is so important and indispensable for
developers.
//
//  end::recap_300_dev_system[]

//  tag::recap_400_project_manageent[]
//
A huge chunk is done; all heavy work to create a full chain for web
development is behind you. Congratulations on what you achieved!

The website is now available from your local PC system, and all is in place
to start the development of your web. It was a long way to go. Now, you have
a development system that compares to systems used in the real world. You
achieved to create a dev system on your PC, not something like a simple test
environment. A warm welcome to the hacker's world to develop professional
and create real-world websites.
//
//  end::recap_400_project_manageent[]

//  tag::recap_500_create_content[]
//
Working on this chapter has have taken much time. That's very certain.
Creating content is not an easy business. To compete for content with other
sites, good functionality is essential in addition to good design. The use
of modules for the content makes the content work not easier, but your
visitors will appreciate the convenience.

////
You can take away a lot of knowledge from working through the chapter:

Content Editing::
Die Quellen aller Inhaltstypen werden mit der Markup-Sprache geschrieben
Asciidoc. AsciiDoc ist ein Nur-Text-Autorenformat zum Schreiben technischer
Inhalte wie Dokumentationen, Artikel und Bücher. Die Variante von Asciidoc,
die von J1 verwendet wird, ist Asciidoctor. AsciiDoctor ist der zentrale
AsciiDoc-Prozessor. Es liest die AsciiDoc-Quellen, parst sie in ein
Dokumentmodell und konvertiert sie mithilfe eines Konverters in ein
veröffentlichungsfähiges Format wie HTML.

Use of modules::
J1 modules are independent Javascript programs integrated into the template
system. Modules are listed as Resources (the actual programs) and integrated
into the template system with the help of adapters. The adapters, complemental
Javascript programs, ensure that no programming is required to use the module.
Only suitable settings are necessary for using J1 Modules.

Navigator support::
////
Regardless of whether you have tried all experiments on the content pages:
You now know how powerful static websites are with the help of the Jekyll
builder engine and the J1 template system. This knowledge is not possible
to attain in a few minutes.

Whether or not you decide to develop your web using J1 is up to you.
But: Your decision is based on real knowledge. That makes the difference.

//
//  end::recap_500_create_content[]

// End Recap -------------------------------------------------------------------


// What Next
// -----------------------------------------------------------------------------
//  tag::what_next_100_what_is_seo[]
//
Well done, folks. All the basics and technical terms were learned that are
needed to create and publish the first website on the Internet. And that will
only take a few minutes.

Unbelievable? Then go to the next section. Here is shown how to do it!

[role="mb-4"]
mdi:sitemap[24px, md-blue mr-2 ml-3]
Go for link:{j1-kickstart-web-in-a-day--a-awesome-site}[A awesome Site].
//
//  end::what_next_100_what_is_seo[]

//  tag::what_next_200_a_awesome_site[]
//
Another milestone has been reached: Your website, your first web project,
is a git repo on Github. This repo will play a central role for all further
steps in this tutorial. You can expect a number of exciting topics to be
discussed later. Editing the content of a project directly via the central
Git repo at Github is possible in individual cases via the Github web
interface, but it contradicts the basic idea of Git as a distributed
management system. How to work with git repos is discussed in the next
sections. You won't become a expert on Git, but you learn all the basics how
to manage git repos. A great base to learn more, that's for sure.

For the next step, a local copy of the repo from Github to a folder on your
PC will be created to start developing from a local system. This local copy,
the so-called working-copy, is the starting point using Git.

J1 comes with a full-featured development system. The local copy of the
repo contains already all components required to manage the development
processes, including a webserver to access your website from your local
system. All you need to know how to install a local development system is
available with the next section. You learn how to manage J1-based websites
based from local and deploy the modifications of your site.

[role="mb-4"]
mdi:hammer-wrench[24px, md-blue mr-2 ml-3]
Go for setting up your personal link:{j1-kickstart-web-in-a-day--dev-system}[development system].
//
//  end::what_next_200_a_awesome_site[]

//  tag::what_next_300_dev_system[]
//
A hard piece of work is done: the development system is in place. Now it will
be a matter of copying the central repository, the so-called remote, to your
local PC and connecting it to the repo on Github. This step is creating a
working copy of your website, the so-called local. In the following section,
you will know all the necessary work steps for managing J1 Projects.

There are different ways to create a J1 project or a new website. You already
know one way: 1-click deployment via Netlify. This type of deployment has been
automatically created a new repo in your workspace on Github. The opposite way
is, of course, also possible. That means you first create a J1 project locally
on your PC and then connect the local project as a Git Repo with Github. It is
also very easy to provide the website via Netlify. Only a few steps are
required to publish locally generated sites via Netlify.

Now you should bring your new website on your local PC or create new websites
from scratch. Some important processes are to be learned to manage J1 projects,
to prepare websites for the real world. Make your real website alive from
J1 Projects by learning the priciples.

[role="mb-4"]
mdi:abacus[24px, md-blue mr-2 ml-3]
Explore the link:{j1-kickstart-web-in-a-day--manage-projects}[J1 Project management].
//
//  end::what_next_300_dev_system[]

//  tag::what_next_400_project_manageent[]
//
In the following section, you deal with existing content and how new
content is created with the help of J1. It will be about discovering
the existing articles to experience how to design your content. You will
learn how new pages are created and which J1 Template tools are already
prepared for new content.

A little theory will help you understand how the Jekyll builder engine works.
A bit of theoretical background is required but spread out as smaller
bites across the sections. Academic lectures will never be. You will be able
to create any content for your website. It is important to understand which
types of documents Jekyll offers and how to write content to not conflict with
the base ideas of Jekyll.

Start the most important work on a website.

[role="mb-4"]
mdi:file-document-edit[24px, md-blue mr-2 ml-3]
Create your link:{j1-kickstart-web-in-a-day--create-content}[content]!
//
//  end::what_next_400_project_manageent[]

//  tag::what_next_500_create_content[]
//
Well done. You reached the last chapter of this tutorial and you're done.
Thanks for all your time using Jekyll and J1. For now, nothing is left to
do.
//
//  end::what_next_500_create_content[]

// End What Next ---------------------------------------------------------------


// Chapters
// -----------------------------------------------------------------------------
//  tag::chapters[]
//
Find here an overview on all chapters this tutorial:
//  end::chapters[]

//  tag::chapters_100_what_is_seo[]
//
[role="mb-4"]
mdi:human-queue[24px, md-gray mr-2 ml-3]
You are here -- What Is SEO +
mdi:sitemap[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--a-awesome-site}[A awesome Site] +
mdi:hammer-wrench[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--dev-system}[Development System] +
mdi:abacus[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--manage-projects}[Project Management] +
mdi:file-document-edit[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--create-content}[Creating content]
//  end::chapters_100_what_is_seo[]

//  tag::chapters_200_a_awesome_site[]
//
[role="mb-4"]
mdi:human-queue[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--meet-and-greet}[What Is SEO] +
mdi:sitemap[24px, md-gray mr-2 ml-3]
You are here -- A awesome Site +
mdi:hammer-wrench[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--dev-system}[Development System] +
mdi:abacus[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--manage-projects}[Project Management] +
mdi:file-document-edit[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--create-content}[Creating content]
//  end::chapters_200_a_awesome_site[]

//  tag::chapters_300_dev_system[]
//
[role="mb-4"]
mdi:human-queue[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--meet-and-greet}[What Is SEO] +
mdi:sitemap[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--a-awesome-site}[A awesome Site] +
mdi:hammer-wrench[24px, md-gray mr-2 ml-3]
You are here -- Development System +
mdi:abacus[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--manage-projects}[Project Management] +
mdi:file-document-edit[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--create-content}[Creating content]
//  end::chapters_300_dev_system[]

//  tag::chapters_400_project_manageent[]
//
[role="mb-4"]
mdi:human-queue[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--meet-and-greet}[What Is SEO] +
mdi:sitemap[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--a-awesome-site}[A awesome Site] +
mdi:hammer-wrench[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--dev-system}[Development System] +
mdi:abacus[24px, md-gray mr-2 ml-3]
You are here -- Project Management +
mdi:file-document-edit[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--create-content}[Creating content]
//  end::chapters_400_project_manageent[]

//  tag::chapters_500_create_content[]
//
[role="mb-4"]
mdi:human-queue[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--meet-and-greet}[What Is SEO] +
mdi:sitemap[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--a-awesome-site}[A awesome Site] +
mdi:hammer-wrench[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--dev-system}[Development System] +
mdi:abacus[24px, md-blue mr-2 ml-3]
link:{j1-kickstart-web-in-a-day--manage-projects}[Project Management] +
mdi:file-document-edit[24px, md-gray mr-2 ml-3]
You are here -- Creating content
//  end::chapters_500_create_content[]

// End Chapters ----------------------------------------------------------------


// Further Reading
// -----------------------------------------------------------------------------
// tag::further_reading[]
//
Reading this chapter is not essential for working on the project first time.
Additional links will be helpful to learn more. The references point to
important sources of manufacturer documentation. Here you can find out all
the possibilities what the products can offer. Experiences from others are
extremely important when dealing with software and more complex projects.
Links to other sites may answer common questions from the experience of
professionals. Here you can think far outside the box of a project currently
worked on.
//
// end::further_reading[]

// tag::further_reading_100_what_is_seo[]
//
[role="mt-3"]
Further links in the current section:

mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-jekyll--docs}[Jekyll Docs -- Jekyll Documentation, {browser-window--new}] +
mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-netlify--docs}[Netlify Docs -- Netlify Documentation, {browser-window--new}] +
mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-netlify--jamstack}[Netlify JAMstack -- Netlify JAM Stack, {browser-window--new}] +
mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-github--docs}[Github Docs -- Github Documentation, {browser-window--new}] +
mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-asciidoctor--docs}[Asciidoctor Docs -- Asciidoc Markup Documentation (Asciidoctor), {browser-window--new}]
//
// end::further_reading_100_what_is_seo[]

// tag::further_reading_200_a_awesome_site[]
//
[role="mt-3"]
Further links in the current section.

mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-jekyll--home}[Jekyll Home -- First address in term of Jekyll, {browser-window--new}] +
mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-netlify--jamstack}[Netlify JAMstack -- Netlify JAM Stack, {browser-window--new}] +
mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-netlify--1-click-button}[Netlify -- Deploy to Netlify button, {browser-window--new}]
//
// end::further_reading_200_a_awesome_site[]

// tag::further_reading_300_dev_system[]
//
[role="mt-3"]
Further links in the current section.

mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-nodejs--home}[NodeJS -- JavaScript language, {browser-window--new}] +
mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-ruby-lang--home}[Ruby -- Ruby language, {browser-window--new}] +
mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-git--home}[Git -- Source versioning, {browser-window--new}] +
mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-github--docs}[Github Docs -- Github Documentation, {browser-window--new}]
//
// end::further_reading_300_dev_system[]

// tag::further_reading_400_project_manageent[]
//
[role="mt-3"]
Further links in the current section.

mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-nodejs--home}[NodeJS -- JavaScript language, {browser-window--new}] +
mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-ruby-lang--home}[Ruby -- Ruby language, {browser-window--new}] +
mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-git--home}[Git -- Source versioning, {browser-window--new}] +
mdi:link-variant[24px, md-blue mr-2 ml-3]
link:{url-github--docs}[Github Docs -- Github Documentation, {browser-window--new}]
//
// end::further_reading_400_project_manageent[]

// tag::further_reading_500_create_content[]
//
[role="mt-3"]

You're finished. Maybe you like to re-check the previous chapters for the
*Further Reading* sections to get more. +
Again, nothing more to do.
//
// end::further_reading_500_create_content[]

// End Further Reading ---------------------------------------------------------
